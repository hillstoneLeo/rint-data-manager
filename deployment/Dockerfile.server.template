FROM python:3.13-slim

WORKDIR /app

# Install system dependencies
RUN unset http_proxy https_proxy HTTP_PROXY HTTPS_PROXY && \
    apt-get update && apt-get install -y \
    git \
    curl \
    build-essential \
    libgit2-dev \
    libffi-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy uv binary from build context
COPY ../data/uv /usr/local/bin/uv
RUN chmod +x /usr/local/bin/uv

# Add uv to PATH
ENV PATH="/usr/local/bin:$PATH"
ENV UV_NO_PROXY="*"

# Copy project files
COPY pyproject.toml uv.lock ./
# Cache-breaking timestamp
ARG BUILD_TIMESTAMP=0
RUN echo $BUILD_TIMESTAMP > /tmp/build_timestamp
COPY backend/ ./backend/
COPY static/ ./static/
COPY templates/ ./templates/
COPY config.yml ./
COPY main.py ./
COPY uvicorn_log_config.json ./

# Install Python dependencies
RUN unset http_proxy https_proxy HTTP_PROXY HTTPS_PROXY && uv sync --frozen --python /usr/local/bin/python3

# Create necessary directories
RUN mkdir -p /tmp/rdm/uploads

# Create startup script with timestamp logging
RUN cat > /entrypoint.sh << 'EOF'
#!/bin/bash
# Entrypoint script for server container

set -e

# Function to print timestamped messages
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $*"
}

log "Starting Rint Data Manager server..."
log "Working directory: $(pwd)"
log "Python version: $(python --version)"
log "UV version: $(uv --version)"

# Check if required files exist
if [ ! -f "main.py" ]; then
    log "Error: main.py not found!"
    exit 1
fi

if [ ! -f "uvicorn_log_config.json" ]; then
    log "Error: uvicorn_log_config.json not found!"
    exit 1
fi

log "All required files found. Starting application..."
exec .venv/bin/python main.py
EOF

RUN chmod +x /entrypoint.sh

# Expose port
EXPOSE ${SERVER_PORT}

# Set entrypoint
ENTRYPOINT ["/entrypoint.sh"]
CMD []
